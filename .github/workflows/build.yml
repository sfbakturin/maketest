name: Maketest

on: push

jobs:
  buildtest:
    name: "Maketest ${{matrix.tool.name}} (buildtype=${{matrix.buildtype}}, sanitizer=${{matrix.sanitizer}})"

    strategy:
      fail-fast: false

      matrix:
        tool:
          - {name: Clang 18, cc: clang, version: 18}
          - {name: Clang 17, cc: clang, version: 17}
          - {name: GCC 13, cc: gcc, version: 13}
          - {name: GCC 12, cc: gcc, version: 12}
          - {name: GCC 11, cc: gcc, version: 11}

        buildtype:
          - debug
          - release

        sanitizer:
          - none
          - thread
          - address
          - leak
          - undefined
          - memory

        exclude:
          # Sanitizing on release buildtype kinda strange.
          - buildtype: release
            sanitizer: thread
          - buildtype: release
            sanitizer: address
          - buildtype: release
            sanitizer: leak
          - buildtype: release
            sanitizer: undefined
          - buildtype: release
            sanitizer: memory
          # There is no MemorySanitizer on GCC.
          - tool: {cc: gcc}
            sanitizer: memory

    runs-on: ubuntu-latest

    container:
      image: ubuntu:latest
      options: --privileged
    env:
      DEBIAN_FRONTEND: noninteractive

    steps:
      - name: Update dependencies
        run: apt-get update

      - name: Install essentials
        run: apt-get install -y build-essential binutils binutils-dev libc++-dev libc++abi-dev make python3 wget curl zip unzip pkg-config lsb-release software-properties-common gnupg

      - name: Install GCC
        if: ${{matrix.tool.cc == 'gcc'}}
        run: apt-get install -y gcc-${{matrix.tool.version}}

      - name: Install Clang
        if: ${{matrix.tool.cc == 'clang'}}
        run: |
          wget https://apt.llvm.org/llvm.sh
          bash llvm.sh ${{matrix.tool.version}}

      - uses: actions/checkout@v4

      - name: Build and test all
        run: CC=${{matrix.tool.cc}}-${{matrix.tool.version}} BUILDTYPE=${{matrix.buildtype}} SANITIZER=${{matrix.sanitizer}} DIRTESTS=tests make all
